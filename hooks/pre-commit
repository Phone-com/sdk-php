#!/bin/bash
echo "[$(basename $0) hook START]"

ORIG_DIR="$(pwd)"
PROJECT="$(git rev-parse --show-toplevel)"
cd "$PROJECT"

STAGED_FILES_CMD=`git diff --cached --name-only --diff-filter=ACMR HEAD | grep \\\\.php | grep -v _ide_helper\\\\.php`

# Determine if a file list is passed
if [ "$#" -eq 1 ]; then
	oIFS=$IFS
	IFS='
	'
	SFILES="$1"
	IFS=$oIFS
fi

SFILES=${SFILES:-$STAGED_FILES_CMD}

for FILE in $SFILES; do
    if [[ "${FILE: -4}" == ".php" ]]; then
        CLASSES="$CLASSES $FILE"
    fi
done

###############################################################################
# LINT CHECK
###############################################################################

if [[ "$CLASSES" != "" ]]; then
    echo "Running PHP lint checking"
    for FILE in $CLASSES; do
        php -l $FILE 2>/dev/null | grep -v 'No syntax errors detected' | grep -v 'Errors parsing'
        if [ ${PIPESTATUS[0]} != 0 ]; then
            exit 1
        fi
    done
fi

###############################################################################
# Coding Standards
###############################################################################

if [[ "$CLASSES" != "" ]]; then
    PHPCS="./vendor/bin/phpcs"
    PHPCBF="./vendor/bin/phpcbf"

    # NOTE: Add the "-s" flag to include the names of any failing sniffs
    PHPCS_COMMON="--encoding=utf-8 --colors -p --report-width=120"

    echo "PSR-2 auto-formatting and checks"

    $PHPCBF $PHPCS_COMMON $CLASSES  --standard="hooks/phpcs.xml"
    git add $CLASSES

    $PHPCS $PHPCS_COMMON $CLASSES  --standard="hooks/phpcs.xml"
    ERRORS=${PIPESTATUS[0]}

    if [ $ERRORS -ne 0 ]; then
        exit 1
    fi
fi

cd "$ORIG_DIR"

echo "[$(basename $0) hook END]"
